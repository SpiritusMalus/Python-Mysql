КУРСОВОЙ ПРОЕКТ
											Введение:
Данная база данных создана на основе платформы по покупке видеоигр - Epic Games,
В данной базе данных вы сможете: 
1)Зарегистрировать нового пользователя(users,profiles)
2)Дружить и обмениваться сообщениями(friend_requests, messages)
3)Посмотреть интересующие вас видеоигры:
	В таблице products вы найдете список игр, game_genre показывает жанр игры
	Таблица media хранит в себе видео и изображения игр
4)Если понравилась игра, можете её приобрести(orders_products) и даже получить на неё скидку!(discounts)
5)После покупки в вашу библиотеку видеоигр добавится соответвующая игра и сможете окунуться в виртуальный мир!(library)

											Подробнее:
Таблица `users` предназначена для новых пользователей, о ней:
1) id = первичный ключ, NOT NULL и автоматически увеличивает своё значение(AUTO_INCREMENT)
2)firstname,lastname, nickname, email, password_hash =  NOT NULL и для каждого задан тип данных varchar, чтобы вводили любые данные
3)phone, wallet_number, так же NOT NULL, тип данных bigint, чтобы вводили только цифры
4)Указаны уникальные ключи, чтобы не было дубликатов
5)Создан индекс для firstname,lastname, nickname = чтобы ускорить их поиск

Таблица `profiles` предназначена для профилей пользователей:
1)user_id = это внешний ключ, который ссылается на id из таблицы users
2)country = выбор страны, NOT NULL потому что заполнение обязательно, варчар для удобства
3)address и home_index= DEFAULT NULL, не обязательное заполнение
4)created_at = время создания профиля, далее если указывается означает тоже самое:)
5)Уникальный user_id, чтобы нельзя было 2 профиля на 1 юзера делать

Таблица `friend_requests` предназначена для дружбы между пользователями:
1)initiator_user_id = инициатор дружбы, внешний ключ и первичный ключ, отсылка к таблице users(id)
2)target_user_id = цель дружбы, внешний ключ и первичный ключ, отсылка к таблице users(id)
3)status = статус дружбы, может быть 4 типов: запрос дружбы, принята дружба, отклонена дружба, не друзья)
4)requested_at = время подачи дружбы, а updated_at = время обновления статуса дружбы

Таблица `variety_of_genres` предназначена для жанров игр:
1)id = первичный ключ, авто инкремент
2)genre = жанр игры, уникальный ключ

Таблица `products` отображает игры в магазине, которые можно приобрести:
1)id = id = первичный ключ, авто инкремент
2)name = Название игры
3)description = Описание игры, выбрал тип данных text, потому что может быть большим описание
4)price = цена
5)game_genre_id = внешний ключ, ведёт к таблице game_genre(id)

Таблица `discounts` предназначена для персональных скидок:
1)id = первичный ключ
2)user_id = внешний ключ, ссылка на users(id), индексирован для ускорения поиска
3)products_id = внешний ключ, ссылка на products(id)
4)discount = скидка указаная в float, от 0.0 до 1.0
5)started_at,finished_at = начало и конец скидки
6)created_at, updated_at = создание записи и её обновление при необходимости

Таблица `new_game_message` оповещение людей  о новой игре в магазине:
1)to_user_id - кому сообщение
2)body - текст 
3)products_id - какая игра вышла
4)created_at - дата создания сообщения
Всё добавляется триггером

Таблица `orders_products` предназначена для покупок игр:
1)id = первичный ключ
2)user_id = внешний ключ, ссылка на users(id)
3)products_id = внешний ключ, ссылка на products(id)
4)created_at = дата совершения покупки

Таблица `games_genres` жанры прикрепленные к играм:
1)products_id - ссылка на игру, индексированно 
2)variety_of_genres_id - отсылка к жанру

Таблица `messages` предназначена для отправки сообщений друг к другу:
1)from_user_id = отправитель сообщения, первичный и внешний ключ, ссылка на ссылка на users(id)
2)to_user_id = получатель сообщения, первичный и внешний ключ, ссылка на ссылка на users(id)
3)body = текст сообщения, тип данных текст, чтобы можно было написать большой текст
4)created_at = дата создания сообщения

Таблица `media_type` для хранения типов медиафайлов:
1)id = первичный ключ
2)type = тип медиафайла, уникальный ключ

Таблица `media` предназначена для хранения медиафайлов игр:
1)id = первичный ключ, авто инкремент, не нулл
2)media_type_id = внешний ключ, ссылка на media_type(id), индексировано для ускорение поиска
3)product_id = внешний ключ, ссылка на products(id), индексировано для ускорение поиска
4)body = текст, который описывает видео/фото файл
5)filename = имя файла
6)size = размер файла
7)metadata = метадата файла, далее проверка метадаты подходит ли она для json файла
8)created_at, updated_at = дата создания файла, дата обновления файла(может быть нулл)

